
        #################################################
        ### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
        #################################################
        # file to edit: 02_tfms_albumentations.ipynb

import torch
import numpy as np
import random

def apply_tfms_albu(vid, tfms_albu):
    """
    Applies `tfms_albu` to `vid` (C,T,H,W) and returns
    a tensor of shape (C,T,H,W)
    """
    seed    = random.randint(0,99999)
    vid     = vid.permute(1,2,3,0) # added line of code
    aug_vid = []
    for x in vid:
        random.seed(seed)
        aug_vid.append((tfms_albu(image = np.asarray(x)))['image'])
    return torch.from_numpy(np.stack(aug_vid)).permute(3,0,1,2)


import albumentations as A

def get_tfms_albu(p=0.6): return A.Compose([
        A.HorizontalFlip(),
        A.ShiftScaleRotate(rotate_limit=15),
        A.ChannelDropout(p=0.1),
        A.RandomRain(p=0.1),
        A.GridDistortion(p=0.2)
    ], p=p)